AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Resources:
  PhotosApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Alpha
      DefinitionUri: ./swagger.yaml
  searchphotos:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      FunctionName: searchphotos
      CodeUri: ./search-photos
      Description: ''
      MemorySize: 128
      Timeout: 3
      Policies:
        - AmazonLexFullAccess
      Events:
        PhotoApi:
          Type: Api
          Properties:
            RestApiId: !Ref "PhotosApiGateway"
            Path: /search
            Method: GET

  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - HEAD
              - GET
              - PUT
              - POST
            AllowedOrigins:
              - "*"

  ImageBucketPublicReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ImageBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource: !Join ["", ["arn:aws:s3:::", !Ref "ImageBucket", "/*" ]]

  indexphotos:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: indexphotos
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./index-photos
      Description: ''
      MemorySize: 128
      Timeout: 3
      Policies:
        - AmazonS3FullAccess
        - AmazonLexFullAccess
        - AmazonRekognitionFullAccess
      Events:
        ExtractTags:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*
